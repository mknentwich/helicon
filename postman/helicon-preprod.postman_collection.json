{
	"info": {
		"_postman_id": "7aff7e5b-3752-4d84-8a15-f03a6c4bf12f",
		"name": "helicon-preprod",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "accounts",
			"item": [
				{
					"name": "root-login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status ok\", function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"storing jwt\", function() {",
									"    pm.response.to.have.header(\"Authorization\")",
									"    var token = pm.response.headers.get(\"Authorization\");",
									"    pm.environment.set(\"jwt\", token.replace(\"Bearer \", \"\"))",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{rootpw}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "root",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api}}/accounts/login",
							"host": [
								"{{api}}"
							],
							"path": [
								"accounts",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "meta",
			"item": [
				{
					"name": "create eu",
					"item": [
						{
							"name": "create eu zone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"name is EU\", function() {",
											"    pm.expect(pm.response.json().name).is.to.equal(\"EU\");",
											"})",
											"",
											"pm.test(\"shipping is 700\", function() {",
											"    pm.expect(pm.response.json().shipping).is.to.equal(700);",
											"})",
											"",
											"pm.test(\"store zone\", function() {",
											"    var zone = pm.response.json();",
											"    pm.environment.set(\"zone_id\", zone.id);",
											"    pm.environment.set(\"zone_name\",zone.name);",
											"    pm.environment.set(\"zone_shipping\", zone.shipping);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"EU\",\n    \"shipping\": 700\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/zones",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"zones"
									]
								}
							},
							"response": []
						},
						{
							"name": "create inland zone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"name is Inland\", function() {",
											"    pm.expect(pm.response.json().name).is.to.equal(\"Inland\");",
											"})",
											"",
											"pm.test(\"shipping is 300\", function() {",
											"    pm.expect(pm.response.json().shipping).is.to.equal(300);",
											"})",
											"",
											"pm.test(\"store zone\", function() {",
											"    var zone = pm.response.json();",
											"    pm.environment.set(\"zone_id\", zone.id);",
											"    pm.environment.set(\"zone_name\",zone.name);",
											"    pm.environment.set(\"zone_shipping\", zone.shipping);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Inland\",\n    \"shipping\": 300\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/zones",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"zones"
									]
								}
							},
							"response": []
						},
						{
							"name": "create slovakia",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"store id\", function() {",
											"    pm.environment.set(\"slovakia_id\", state.id);",
											"})",
											"",
											"pm.test(\"name is Slowakei\", function() {",
											"    pm.expect(state.name).to.equal(\"Slowakei\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Slowakei\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create austria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Österreich\", function() {",
											"    pm.expect(state.name).to.equal(\"Österreich\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Österreich\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create belgium",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Belgien\", function() {",
											"    pm.expect(state.name).to.equal(\"Belgien\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Belgien\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create bulgaria",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Bulgarien\", function() {",
											"    pm.expect(state.name).to.equal(\"Bulgarien\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Bulgarien\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create denmark",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Dänemark\", function() {",
											"    pm.expect(state.name).to.equal(\"Dänemark\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Dänemark\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create estonia",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Estland\", function() {",
											"    pm.expect(state.name).to.equal(\"Estland\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Estland\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create finland",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Finnland\", function() {",
											"    pm.expect(state.name).to.equal(\"Finnland\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Finnland\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create france",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Frankreich\", function() {",
											"    pm.expect(state.name).to.equal(\"Frankreich\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Frankreich\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create greece",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Griechenland\", function() {",
											"    pm.expect(state.name).to.equal(\"Griechenland\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Griechenland\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create united kingdom",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Großbritannien\", function() {",
											"    pm.expect(state.name).to.equal(\"Großbritannien\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Großbritannien\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create ireland",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Irland\", function() {",
											"    pm.expect(state.name).to.equal(\"Irland\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Irland\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create italy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Italien\", function() {",
											"    pm.expect(state.name).to.equal(\"Italien\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Italien\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create croatia",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Kroatien\", function() {",
											"    pm.expect(state.name).to.equal(\"Kroatien\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Kroatien\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create liechtenstein",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Liechtenstein\", function() {",
											"    pm.expect(state.name).to.equal(\"Liechtenstein\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Liechtenstein\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create latvia",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Lettland\", function() {",
											"    pm.expect(state.name).to.equal(\"Lettland\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lettland\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create luxembourg",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Luxemburg\", function() {",
											"    pm.expect(state.name).to.equal(\"Luxemburg\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Luxemburg\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create lithuania",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Litauen\", function() {",
											"    pm.expect(state.name).to.equal(\"Litauen\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Litauen\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create malta",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Malta\", function() {",
											"    pm.expect(state.name).to.equal(\"Malta\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Malta\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create netherlands",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Niederlande\", function() {",
											"    pm.expect(state.name).to.equal(\"Niederlande\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Niederlande\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create norway",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Norwegen\", function() {",
											"    pm.expect(state.name).to.equal(\"Norwegen\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Norwegen\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create poland",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Polen\", function() {",
											"    pm.expect(state.name).to.equal(\"Polen\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Polen\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create romania",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Rumänien\", function() {",
											"    pm.expect(state.name).to.equal(\"Rumänien\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Rumänien\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create sweden",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Schweden\", function() {",
											"    pm.expect(state.name).to.equal(\"Schweden\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Schweden\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create cyprus",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Zypern\", function() {",
											"    pm.expect(state.name).to.equal(\"Zypern\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Zypern\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create slovakia",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Slowakei\", function() {",
											"    pm.expect(state.name).to.equal(\"Slowakei\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Slowakei\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create slovenia",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Slowenien\", function() {",
											"    pm.expect(state.name).to.equal(\"Slowenien\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Slowenien\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create czech republic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Tschechien\", function() {",
											"    pm.expect(state.name).to.equal(\"Tschechien\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Tschechien\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create spain",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Spanien\", function() {",
											"    pm.expect(state.name).to.equal(\"Spanien\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Spanien\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create hungary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Ungarn\", function() {",
											"    pm.expect(state.name).to.equal(\"Ungarn\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Ungarn\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create portugal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Portugal\", function() {",
											"    pm.expect(state.name).to.equal(\"Portugal\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Portugal\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create switzerland",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Schweiz\", function() {",
											"    pm.expect(state.name).to.equal(\"Schweiz\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Schweiz\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						},
						{
							"name": "create germany",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var state;",
											"pm.test(\"status ok\", function() {",
											"    pm.response.to.have.status(200);",
											"    state = pm.response.json();",
											"})",
											"",
											"pm.test(\"name is Deutschland\", function() {",
											"    pm.expect(state.name).to.equal(\"Deutschland\");",
											"})",
											"",
											"pm.test(\"zone id is parent\", function() {",
											"    pm.expect(state.zone.id).to.equal(pm.environment.get(\"zone_id\"));",
											"})",
											"",
											"pm.test(\"zone name is parent\", function() {",
											"    pm.expect(state.zone.name).to.equal(pm.environment.get(\"zone_name\"));",
											"})",
											"",
											"pm.test(\"store state id\", function() {",
											"    pm.environment.set(\"state_id\", state.id);",
											"})",
											"",
											"pm.test(\"zone shipping is parent\", function() {",
											"    pm.expect(state.zone.shipping).to.equal(pm.environment.get(\"zone_shipping\"));",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Deutschland\",\n    \"zoneId\": {{zone_id}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api}}/meta/states",
									"host": [
										"{{api}}"
									],
									"path": [
										"meta",
										"states"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{jwt}}",
						"type": "string"
					}
				]
			}
		}
	]
}