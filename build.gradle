plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.4.10'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.4.10'
    id 'org.jetbrains.kotlin.kapt' version '1.4.10'
    id 'io.swagger.core.v3.swagger-gradle-plugin' version '2.1.4'
    id 'org.jlleitschuh.gradle.ktlint' version '9.4.1'
}

group = 'at.markus-nentwich'
version = '0.0.1-SNAPSHOT'
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j:2.13.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    kapt 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    implementation 'io.swagger.core.v3:swagger-annotations:2.1.4'
    implementation 'io.swagger.core.v3:swagger-core:2.1.4'
    implementation 'io.swagger.core.v3:swagger-jaxrs2:2.1.4'
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.4.7'
    implementation 'org.springdoc:springdoc-openapi-ui:1.4.7'
    implementation 'org.springdoc:springdoc-openapi-kotlin:1.4.7'

    implementation 'org.modelmapper:modelmapper:2.3.8'

    implementation 'org.asciidoctor:asciidoctorj:2.4.1'
    implementation 'org.asciidoctor:asciidoctorj-pdf:1.5.3'

    runtimeOnly 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    implementation 'org.bouncycastle:bcprov-jdk15on:1.67'

}

test {
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

resolve {
    classpath = sourceSets.main.runtimeClasspath as Iterable<File>
    outputDir = buildDir
    outputFormat = io.swagger.v3.plugins.gradle.tasks.ResolveTask.Format.YAML
    resourcePackages = ['at.markusnentwich.helicon.services']
}